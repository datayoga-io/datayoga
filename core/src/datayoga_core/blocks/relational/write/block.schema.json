{
  "title": "relational.write",
  "description": "Write into a SQL-compatible data store",
  "type": "object",
  "additionalProperties": false,
  "examples": [
    {
      "id": "load_snowflake",
      "type": "relational.write",
      "properties": {
        "connection": "eu_datalake",
        "table": "employees",
        "schema": "dbo",
        "load_strategy": "APPEND"
      }
    }
  ],
  "properties": {
    "connection": {
      "type": "string",
      "title": "The connection to use for loading",
      "description": "Logical connection name as defined in the connections.yaml",
      "examples": ["europe_db", "target", "eu_dwh"]
    },
    "schema": {
      "type": "string",
      "title": "The table schema of the target table",
      "description": "If left blank, the default schema of this connection will be used as defined in the connections.yaml",
      "examples": ["dbo"]
    },
    "table": {
      "type": "string",
      "title": "The target table name",
      "description": "Target table name",
      "examples": ["employees"]
    },
    "keys": {
      "type": "array",
      "title": "Business keys to use in case of `load_strategy` is UPSERT or working with `opcode_field`",
      "items": {
        "type": ["string", "object"],
        "title": "name of column"
      },
      "examples": [["fname", { "lname": "last_name" }]]
    },
    "mapping": {
      "type": "array",
      "title": "Fields to write",
      "items": {
        "type": ["string", "object"],
        "title": "name of column"
      },
      "examples": [["fname", { "lname": "last_name" }, "address", "gender"]]
    },
    "foreach": {
      "type": "string",
      "title": "Split a column into multiple records with a JMESPath expression",
      "description": "Use a JMESPath expression to split a column into multiple records. The expression should be in the format column: expression.",
      "pattern": "^(?!:).*:.*(?<!:)$",
      "examples": ["order_line: lines[]"]
    },
    "opcode_field": {
      "type": "string",
      "description": "Name of the field in the payload that holds the operation (c - create, d - delete, u - update) for this record in the DB"
    },
    "load_strategy": {
      "type": "string",
      "enum": ["APPEND", "REPLACE", "UPSERT", "TYPE2"],
      "description": "type of target",
      "default": "APPEND"
    },
    "active_record_indicator": {
      "type": "string",
      "description": "Used for `TYPE2` load_strategy. An SQL expression used to identify which rows are active",
      "examples": ["is_active='Y'", "deletedAt is null"]
    },
    "inactive_record_mapping": {
      "type": "array",
      "title": "Used for `TYPE2` load_strategy. The columns mapping to use to close out an active record",
      "description": "A list of columns to use. Use any valid SQL expression for the source. If 'target' is omitted, will default to the name of the source column",
      "default": [],
      "examples": [
        [
          {
            "source": "CURRENT_DATE",
            "target": "deletedAt"
          },
          {
            "source": "'Y'",
            "target": "is_active"
          }
        ]
      ]
    }
  },
  "required": ["connection", "table", "schema"],
  "allOf": [{ "not": { "required": ["opcode_field", "load_strategy"] } }]
}
