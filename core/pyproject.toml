[tool.poetry]
name = "datayoga-core"
version = "0.0.0"
description = "DataYoga for Python"
authors = ["DataYoga <admin@datayoga.io>"]
license = "Apache-2.0"
readme = "README.md"
include = []

classifiers = [
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: Apache Software License",
        "Programming Language :: Python :: 3.7",
        "Topic :: Database"
]

[tool.poetry.dependencies]
certifi = "^2023.7.22"
pysqlite3-binary = { version = "^0.5.0", platform = "linux" }
cryptography = ">=39.0.1"
Jinja2 = "^3.1.2"
jmespath = "^1.0.0"
jsonschema = "^4.4.0"
orjson = "^3.8.7"
prometheus-client = "^0.16.0"
python = "^3.7"
PyYAML = "^6.0"
sqlglot = "^10.4.3"

mock = { version = "^4.0.3", optional = true }
pytest = { version = "^7.1.2", optional = true }
pytest-aioresponses = { version = "^0.2.0", optional = true }
pytest-asyncio = { version = "^0.20.2", optional = true }
pytest-describe = { version = "^2.0.1", optional = true }
pytest-mock = { version = "^3.7.0", optional = true }
pytest-timeout = { version = "^2.1.0", optional = true }
requests-mock = { version = "^1.9.3", optional = true }
testcontainers = { version = "^3.7.0", optional = true }

azure-eventhub = { version = "^5.11.2", optional = true }
azure-eventhub-checkpointstoreblob-aio = { version = "^1.1.4", optional = true }
aiohttp = { version = "^3.8.4", optional = true }
cassandra-driver = { version = "^3.25.0", optional = true }
fastparquet = { version = "^2023.2.0", optional = true, platform = "python>=3.8" }
ibm_db_sa = { version = "^0.4.0", optional = true }
oracledb = { version = "^1.2.2", optional = true }
psycopg2-binary = { version = "^2.9.5", optional = true }
pymssql = { version = "^2.2.7", optional = true }
PyMySQL = { version = "^1.0.2", optional = true }
redis = { version = "^4.3.5", optional = true }
SQLAlchemy = { version = "^2.0.4", optional = true }
confluent-kafka = { version = "^2.3.0", optional = true }

[tool.poetry.extras]
azure = ["azure-eventhub", "azure-eventhub-checkpointstoreblob-aio"]
db2 = ["ibm_db_sa"]
cassandra = ["cassandra-driver"]
http = ["aiohttp"]
mysql = ["PyMySQL", "SQLAlchemy"]
oracle = ["oracledb", "SQLAlchemy"]
parquet = ["fastparquet"]
pg = ["psycopg2-binary", "SQLAlchemy"]
redis = ["redis"]
sqlserver = ["pymssql", "SQLAlchemy"]
kafka = ["confluent-kafka"]

test = [
        "aiohttp",
        "cassandra-driver",
        "fastparquet",
        "ibm_db_sa",
        "mock",
        "oracledb",
        "psycopg2-binary",
        "pymssql",
        "PyMySQL",
        "pytest",
        "pytest-aioresponses",
        "pytest-asyncio",
        "pytest-describe",
        "pytest-mock",
        "pytest-timeout",
        "redis",
        "requests-mock",
        "SQLAlchemy",
        "testcontainers"
]

[tool.poetry.urls]
url = "https://datayoga.io"
[tool.poetry.scripts]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
